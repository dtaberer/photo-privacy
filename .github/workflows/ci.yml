# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed to push updated badge JSON to main

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --silent

      - name: Typecheck
        run: npm run typecheck --silent

      # Run tests with coverage (Vitest)
      - name: Test with coverage
        run: npm test -- --coverage

      # Generate coverage badge JSON files (outputs to docs/badges)
      - name: Generate coverage badges
        run: node scripts/update-coverage-badges.mjs

      # Commit updated badges back to main (skip on PRs and non-main pushes)
      - name: Commit coverage badges
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          if git diff --quiet docs/badges; then
            echo "No badge changes to commit.";
            exit 0;
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/badges/*.json
          git commit -m "chore(badges): update coverage badge JSON [skip ci]" || echo "Nothing to commit"
          git push origin HEAD

      # Upload badge JSON as an artifact for PR inspection (optional)
      - name: Upload coverage badge artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badges
          path: docs/badges/*.json

      # Upload coverage (tokenless public mode)
      - name: Upload coverage to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v4
        with:
          files: coverage/lcov.info
          flags: unit
          fail_ci_if_error: false
          verbose: false
        # Omit token for public repositories (tokenless upload); set secrets.CODECOV_TOKEN for private repos if needed.
      # Build production bundle
      - name: Build (Vite)
        run: npm run build --silent

      # Verify ORT sidecar distribution
      - name: Verify ORT distribution
        run: npm run build:verify --silent
